var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SubglobalSensitivityAnalysis","category":"page"},{"location":"#SubglobalSensitivityAnalysis","page":"Home","title":"SubglobalSensitivityAnalysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SubglobalSensitivityAnalysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SubglobalSensitivityAnalysis]","category":"page"},{"location":"#SubglobalSensitivityAnalysis.calculate_parbounds!-Tuple{Any}","page":"Home","title":"SubglobalSensitivityAnalysis.calculate_parbounds!","text":"calculate_parbounds(dist, x; δ_cp = 0.1 )\n\ncompute the values at quantiles ±δcp around x with δcp difference in the cumulated probability.  The quantiles are constrained to not extend beyond min_quant and max_quant.\n\nIt returns a NamedTuple of\n\nsens_lowe: lower quantile\nsens_upper: upper quantile\ncp_ref: cdf of x (cumulative distribution function, i.e. p-value)\ncpsenslower: cdf of lower quantile\ncpsensupper: cdf of upper quantile\n\nA wider distribution prior distribution will result in a wider intervals.\n\nThe DataFrame variant assumes x as column :ref to be present and  adds/modifies output columns (named as above outputs).\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.calculate_parbounds-Tuple{Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.calculate_parbounds","text":"calculate_parbounds(dist, x; δ_cp = 0.1 )\n\ncompute the values at quantiles ±δcp around x with δcp difference in the cumulated probability.  The quantiles are constrained to not extend beyond min_quant and max_quant.\n\nIt returns a NamedTuple of\n\nsens_lowe: lower quantile\nsens_upper: upper quantile\ncp_ref: cdf of x (cumulative distribution function, i.e. p-value)\ncpsenslower: cdf of lower quantile\ncpsensupper: cdf of upper quantile\n\nA wider distribution prior distribution will result in a wider intervals.\n\nThe DataFrame variant assumes x as column :ref to be present and  adds/modifies output columns (named as above outputs).\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.compute_cp_design_matrix-Tuple{Any, Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.compute_cp_design_matrix","text":"compute_cp_design_matrix(df_dist, names_opt, N; path_sens_object=tempname()*\".rds\")\n\nCompute the design matrix for two symples of size N from cumulative probability ranges. Returns a NamedTuple: \n\ncpdesign: Matrix (nrow x n_param) for wich output needs to be computed\npathsensobject: path to the file that stores the R sensitivity object\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.compute_sobol_indices-Tuple{Any, Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.compute_sobol_indices","text":"compute_sobol_indices(y, path_sens_object, par_names)\n\nTell the results, y,to sensitivity object in R, deserialized from path_sens_object and compute first order and total SOBOL effects and its uncertainty.\n\nReturns a DataFrame with columns \n\npar: parameter name from parnames - should match `dfcfopt.par`      from computecpdesign_matrix\nindex: which one of the SOBOL-indices, :first_order or :total\nvalue: the estimate\ncf95lower and cf95upper: estimates of the 95% confidence interval\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.estimate_subglobal_sobol_indices-Tuple{Any, Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.estimate_subglobal_sobol_indices","text":"estimate_regional_sobol_indices(f, parmsModeUpperRows, p0; \n    n_sample = 500, δ_cp = 0.1)\n\nEstimate the Sobol sensitivity indices for a subset of the global space around parameter vector p0.\n\nThe region subspace to sample is determined by an area in the cumulative probability function, specifically for parameter i: cdf(p0) ± δ_cp,  Samples are drawn from this region in the cdf and converted back to quantiles at the parameter scale.\n\nSobol indices are estimated using the method of Touati (2016), which has a total cost of (p+2)n, where p is the number of parameters and n is the number of samples in each of the two random parameter samples.\n\nArguments\n\nf: a function to compute a set of results, whose sensitivity is to be inspected,\n\nfrom parametes (p1, p2, ...) -> NamedTuple{NTuple{N,NT}} where NT <: Number,   for example fsens = (a,b) -> (;target1 = a + b -1, target2 = a + b -0.5).\n\nparmsModeUpperRows: a Vector of Tuples of the form  (:par_name, Distribution, mode, 95%_quantile) where Distribution is a non-parameterized Object from Distributions.jl such as LogNormal\np0: the parameter around which the samples are drawn.\n\nOptional\n\nn_sample = 500: the number of parameter-vectors in each of the two samples\nδcp = 0.1: the range around cdf(p0i) to sample.\ntargets: a NTuple{Symbol} of subset of the outputs of f, to constrain the  computation to specific outputs.\nmin_quant=0.005 and max_quant=0.995: to constrain the range of  cumulative probabilities when parameters are near the ends of the distribution.\n\nReturn value\n\nA DataFrame with columns\n\npar: parameter name \nindex: which one of the SOBOL-indices, :first_order or :total\nvalue: the estimate\ncf95lower and cf95upper: estimates of the 95% confidence interval\ntarget: the result, for which the sensitivity has been computed\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.fit_distributions!-Tuple{DataFrames.DataFrame}","page":"Home","title":"SubglobalSensitivityAnalysis.fit_distributions!","text":"fit_distributions(tups)\nfit_distributions!(df)\n\nFor each row, use fit a distribution of type dType to mode and upper quantile.\n\nIn the first variant, parameters are specified as a vector of tuples, which are  converted to a DataFrame. A new column :dist with a concrete Distribution is added. The second variant modifies a DataFrame with corresponding input columns.\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.fit_distributions-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T<:Tuple","page":"Home","title":"SubglobalSensitivityAnalysis.fit_distributions","text":"fit_distributions(tups)\nfit_distributions!(df)\n\nFor each row, use fit a distribution of type dType to mode and upper quantile.\n\nIn the first variant, parameters are specified as a vector of tuples, which are  converted to a DataFrame. A new column :dist with a concrete Distribution is added. The second variant modifies a DataFrame with corresponding input columns.\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.set_reference_parameters!-Tuple{Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.set_reference_parameters!","text":"set_reference_parameters!(df, par_dict)\n\nSet the :ref column to given parameters for keys in par_dict matching column :par.    Non-matching keys are set to missing.\n\n\n\n\n\n","category":"method"},{"location":"#SubglobalSensitivityAnalysis.transform_cp_design_to_quantiles-Tuple{Any, Any}","page":"Home","title":"SubglobalSensitivityAnalysis.transform_cp_design_to_quantiles","text":"transform_cp_design_to_quantiles(df_cfopt, cp_design)\n\nTransform cumulative probabilities back to quantiles.\n\n\n\n\n\n","category":"method"}]
}
